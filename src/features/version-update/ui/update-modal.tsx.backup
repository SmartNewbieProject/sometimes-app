import React from 'react';
import {View, Text, StyleSheet, Modal, TouchableOpacity, ScrollView, Linking} from 'react-native';
import {VersionUpdateResponse} from '../types';
import colors from '@shared/constants/colors';

interface UpdateModalProps {
  visible: boolean;
  onClose: () => void;
  onSkipVersion: () => void;
  updateData: VersionUpdateResponse;
}

export const UpdateModal: React.FC<UpdateModalProps> = ({
                                                          visible,
                                                          onClose,
                                                          onSkipVersion,
                                                          updateData
                                                        }) => {
  const handleUpdatePress = () => {
    const storeUrl = 'https://apps.apple.com/app/id6736886542';
    Linking.openURL(storeUrl);
  };

  const canSkip = !updateData.shouldUpdate;

  return (
      <Modal
          visible={visible}
          animationType="fade"
          transparent={true}
          onRequestClose={canSkip ? onClose : undefined}
      >
        <View style={styles.overlay}>
          <View style={styles.modalContainer}>
            <View style={styles.header}>
              <Text style={styles.title}>업데이트 안내</Text>
              <Text style={styles.version}>v{updateData.version}</Text>
            </View>

            <ScrollView style={styles.descriptionContainer}>
              <Text style={styles.descriptionTitle}>업데이트 내용</Text>
              {updateData.metadata.description.map((item, index) => (
                  <Text key={index} style={styles.descriptionItem}>
                    • {item}
                  </Text>
              ))}
            </ScrollView>

            <View style={styles.buttonContainer}>
              <TouchableOpacity
                  style={styles.updateButton}
                  onPress={handleUpdatePress}
              >
                <Text style={styles.updateButtonText}>업데이트</Text>
              </TouchableOpacity>

              {canSkip && (
                  <TouchableOpacity
                      style={styles.skipButton}
                      onPress={onSkipVersion}
                  >
                    <Text style={styles.skipButtonText}>이 버전 건너뛰기</Text>
                  </TouchableOpacity>
              )}
            </View>
          </View>
        </View>
      </Modal>
  );
};

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 20,
  },
  modalContainer: {
    backgroundColor: colors.white,
    borderRadius: 16,
    padding: 24,
    maxHeight: '70%',
    width: '100%',
    maxWidth: 400,
  },
  header: {
    alignItems: 'center',
    marginBottom: 24,
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    color: colors.black,
    marginBottom: 8,
  },
  version: {
    fontSize: 16,
    color: colors.gray,
    fontWeight: '500',
  },
  descriptionContainer: {
    maxHeight: 200,
    marginBottom: 24,
  },
  descriptionTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: colors.black,
    marginBottom: 12,
  },
  descriptionItem: {
    fontSize: 14,
    color: colors['gray-600'],
    lineHeight: 20,
    marginBottom: 8,
  },
  buttonContainer: {
    gap: 12,
  },
  updateButton: {
    backgroundColor: colors.primaryPurple,
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: 'center',
  },
  updateButtonText: {
    color: colors.white,
    fontSize: 16,
    fontWeight: '600',
  },
  skipButton: {
    backgroundColor: colors.lightPurple,
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: 'center',
  },
  skipButtonText: {
    color: colors.gray,
    fontSize: 16,
    fontWeight: '500',
  },
});